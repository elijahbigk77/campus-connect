{"ast":null,"code":"const fetchJobs = async () => {\n  try {\n    // Specify the categories you want to fetch jobs for\n    const categories = ['Engineering', 'Healthcare & Nursing', 'Information Technology'];\n\n    // Fetch jobs for each category\n    const jobsPromises = categories.map(async category => {\n      let allJobs = [];\n      let page = 1;\n      let totalPages = 1;\n\n      // Fetch all pages of jobs for the current category\n      while (page <= totalPages) {\n        const response = await fetch(`https://api.adzuna.com/v1/api/jobs/gb/search/${page}?app_id=c517dc0d&app_key=f77d04712010a1dc057e4feeead4adc4&category=${encodeURIComponent(category)}`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch jobs for category: ${category}`);\n        }\n        const data = await response.json();\n        allJobs.push(...data.results);\n        totalPages = Math.ceil(data.count / data.per_page);\n        page++;\n      }\n      return allJobs;\n    });\n\n    // Wait for all requests to complete and concatenate the results\n    const allJobs = await Promise.all(jobsPromises);\n    const allJobsFlattened = allJobs.flat();\n    setJobs(allJobsFlattened);\n  } catch (error) {\n    console.error('Error fetching jobs:', error);\n  }\n};","map":{"version":3,"names":["fetchJobs","categories","jobsPromises","map","category","allJobs","page","totalPages","response","fetch","encodeURIComponent","ok","Error","data","json","push","results","Math","ceil","count","per_page","Promise","all","allJobsFlattened","flat","setJobs","error","console"],"sources":["/Users/Elijah/Desktop/campus-connect-hub/src/components/JobInternshipComponent.js"],"sourcesContent":["const fetchJobs = async () => {\n  try {\n    // Specify the categories you want to fetch jobs for\n    const categories = ['Engineering', 'Healthcare & Nursing', 'Information Technology'];\n\n    // Fetch jobs for each category\n    const jobsPromises = categories.map(async (category) => {\n      let allJobs = [];\n      let page = 1;\n      let totalPages = 1;\n\n      // Fetch all pages of jobs for the current category\n      while (page <= totalPages) {\n        const response = await fetch(`https://api.adzuna.com/v1/api/jobs/gb/search/${page}?app_id=c517dc0d&app_key=f77d04712010a1dc057e4feeead4adc4&category=${encodeURIComponent(category)}`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch jobs for category: ${category}`);\n        }\n        const data = await response.json();\n        allJobs.push(...data.results);\n        totalPages = Math.ceil(data.count / data.per_page);\n        page++;\n      }\n      \n      return allJobs;\n    });\n\n    // Wait for all requests to complete and concatenate the results\n    const allJobs = await Promise.all(jobsPromises);\n    const allJobsFlattened = allJobs.flat();\n    \n    setJobs(allJobsFlattened);\n  } catch (error) {\n    console.error('Error fetching jobs:', error);\n  }\n};\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACF;IACA,MAAMC,UAAU,GAAG,CAAC,aAAa,EAAE,sBAAsB,EAAE,wBAAwB,CAAC;;IAEpF;IACA,MAAMC,YAAY,GAAGD,UAAU,CAACE,GAAG,CAAC,MAAOC,QAAQ,IAAK;MACtD,IAAIC,OAAO,GAAG,EAAE;MAChB,IAAIC,IAAI,GAAG,CAAC;MACZ,IAAIC,UAAU,GAAG,CAAC;;MAElB;MACA,OAAOD,IAAI,IAAIC,UAAU,EAAE;QACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gDAA+CH,IAAK,sEAAqEI,kBAAkB,CAACN,QAAQ,CAAE,EAAC,CAAC;QACtL,IAAI,CAACI,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,sCAAqCR,QAAS,EAAC,CAAC;QACnE;QACA,MAAMS,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCT,OAAO,CAACU,IAAI,CAAC,GAAGF,IAAI,CAACG,OAAO,CAAC;QAC7BT,UAAU,GAAGU,IAAI,CAACC,IAAI,CAACL,IAAI,CAACM,KAAK,GAAGN,IAAI,CAACO,QAAQ,CAAC;QAClDd,IAAI,EAAE;MACR;MAEA,OAAOD,OAAO;IAChB,CAAC,CAAC;;IAEF;IACA,MAAMA,OAAO,GAAG,MAAMgB,OAAO,CAACC,GAAG,CAACpB,YAAY,CAAC;IAC/C,MAAMqB,gBAAgB,GAAGlB,OAAO,CAACmB,IAAI,CAAC,CAAC;IAEvCC,OAAO,CAACF,gBAAgB,CAAC;EAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}